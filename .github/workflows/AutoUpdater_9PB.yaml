name: Update VPN Subscription (SUB_9PB)

on:
  schedule:
    - cron: '0 */4 * * *' # every 4 hours
    
  # Manual trigger with inputs
  workflow_dispatch:
    inputs:
      use_latency_filter:
        description: "Enable latency filter? (true/false)"
        required: true
        default: "false"
      latency_threshold:
        description: "Latency threshold in ms (only used if filter is true)"
        required: true
        default: "100"
      use_only_geoip:
        description: "Use only GeoIP for naming? (true/false)"
        required: false
        default: "false"
jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml babel pycountry

      - name: Fail if SUB_9PB is missing
        run: |
          if [ -z "${{ secrets.SUB_9PB }}" ]; then
            echo "❌ ERROR: SUB_9PB secret is not set in repository secrets."
            exit 1
          fi

      - name: Restore SUB_9PB from secret
        run: |
          echo "${{ secrets.SUB_9PB }}" > SUB_9PB

      - name: Set latency filter environment for scheduled/manual runs
        run: |
          # If manual run, use workflow inputs; if scheduled, default to false
          echo "LATENCY_FILTER=${{ github.event.inputs.use_latency_filter || 'false' }}" >> $GITHUB_ENV
          echo "LATENCY_THRESHOLD=${{ github.event.inputs.latency_threshold || '100' }}" >> $GITHUB_ENV
          
          # GeoIP-only filter (default true if scheduled)
          echo "USE_ONLY_GEOIP=${{ github.event.inputs.use_only_geoip || 'false' }}" >> $GITHUB_ENV
          
      - name: Run Python script
        run: python src/9PB.py
        env:
          CN_TO_CC: ${{ secrets.CN_TO_CC }}
          LATENCY_FILTER: ${{ env.LATENCY_FILTER }}
          LATENCY_THRESHOLD: ${{ env.LATENCY_THRESHOLD }}
          USE_ONLY_GEOIP: ${{ env.USE_ONLY_GEOIP }}

      - name: Generate GMT+6:30 timestamp
        id: timestamp
        run: |
          # Get UTC time in seconds since epoch
          utc_seconds=$(date -u +%s)
          # Add 6 hours 30 minutes = 23400 seconds
          local_seconds=$((utc_seconds + 6*3600 + 30*60))
          # Format as DD.MM.YYYY HH:MM:SS GMT+6:30
          TIMESTAMP=$(date -u -d "@$local_seconds" +"%d.%m.%Y %H:%M:%S")
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: Commit and Push 9PB
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add 9PB

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "🎉9PB Auto update successful🎉 - $TIMESTAMP"
            git push --force-with-lease origin main
          fi
