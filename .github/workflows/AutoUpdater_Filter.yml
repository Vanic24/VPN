name: Update VPN Subscription (SUB_Filter)

on:
  # Run every 30 minutes
  schedule:
    - cron: "*/30 * * * *"
  # Manual trigger with inputs
  workflow_dispatch:
    inputs:
      use_latency_filter:
        description: "Enable latency filter? (true/false)"
        required: true
        default: "true"
      latency_threshold:
        description: "Latency threshold in ms (only used if filter is true)"
        required: false
        default: "100"

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install requests pyyaml

      - name: Fail if FILTER_SOURCES is missing
        run: |
          if [ -z "${{ secrets.FILTER_SOURCES }}" ]; then
            echo "❌ ERROR: FILTER_SOURCES secret is not set in repository secrets."
            exit 1
          fi

      - name: Restore filter_sources from secret
        run: |
          echo "${{ secrets.FILTER_SOURCES }}" > filter_sources

      - name: Set latency filter environment for scheduled/manual runs
        run: |
          # If manual run, use workflow inputs; if scheduled, default to true/100ms
          echo "LATENCY_FILTER=${{ github.event.inputs.use_latency_filter || 'true' }}" >> $GITHUB_ENV
          echo "LATENCY_THRESHOLD=${{ github.event.inputs.latency_threshold || '100' }}" >> $GITHUB_ENV

      - name: Run Filter.py
        run: python src/Filter.py

      - name: Commit and Push Filter
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add Filter

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update Filter"
            git push --force-with-lease origin main
          fi
