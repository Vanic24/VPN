name: Test

on:
  workflow_dispatch:

jobs:
  fetch_parse_subscription:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Download SubConverter
      - name: Download SubConverter
        run: |
          $url = "https://github.com/tindy2013/subconverter/releases/download/v0.9.0/subconverter_win64.7z"
          $output = "subconverter.7z"
          Invoke-WebRequest -Uri $url -OutFile $output
          & 7z x $output -o".\subconverter"
          Remove-Item $output
      # Step 3: Convert subscription to Clash configuration
      - name: Convert subscription
        run: |
          $sub_url = "${{ secrets.TEST_URL }}"
          $config_file = "config.yaml"
          & ".\subconverter\subconverter-windows-amd64-v0.6.1.exe" -u $sub_url -o $config_file
          if (-Not (Test-Path $config_file)) { Write-Error "config.yaml not created"; exit 1 }
          Get-Content $config_file -TotalCount 5

      # Step 4: Parse nodes and generate Test_Nodes.txt
      - name: Generate Test_Nodes.txt
        shell: pwsh
        run: |
          python <<'EOF'
          import yaml

          with open("config.yaml", "r", encoding="utf-8") as f:
              config = yaml.safe_load(f)

          output_lines = []
          for idx, proxy in enumerate(config.get("proxies", [])):
              raw = proxy.get("name", "").strip()
              country_code = proxy.get("country_code", "XX")
              # Assign flag emoji
              if len(country_code) == 2:
                  flag = chr(0x1F1E6 + ord(country_code[0].upper()) - 65) + \
                         chr(0x1F1E6 + ord(country_code[1].upper()) - 65)
              else:
                  flag = "🏳️"
              new_name = f"{flag} {country_code}-{idx+1} | @Test"
              output_lines.append(f"{raw}#{new_name}")

          with open("Test_Nodes.txt", "w", encoding="utf-8") as f:
              f.write("\n".join(output_lines))

          print("✅ Parsed nodes saved to Test_Nodes.txt")
          EOF
